apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-dashboard-service
  namespace: ${K8S_NAMESPACE}
  labels:
    app: analytics-dashboard-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: analytics-dashboard-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: analytics-dashboard-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8050"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: analytics-dashboard-service
        image: ${DOCKER_REGISTRY}/x7ai/analytics-dashboard-service:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8050
          name: http
        env:
        - name: LOG_LEVEL
          value: "INFO"
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: url
        - name: SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: anon_key
        - name: SUPABASE_SERVICE_ROLE_KEY
          valueFrom:
            secretKeyRef:
              name: supabase-secrets
              key: service_role_key
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka:9092"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8050
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8050
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
